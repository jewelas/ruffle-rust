name: Test Web

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Test node ${{ matrix.node_version }} / rust ${{ matrix.rust_version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.rust_version == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        # We most likely don't care about rust versions here, we'll catch those issues in "test rust"
        node_version: ['10', '12']
        rust_version: ['stable']
        # MIKE: Turning off macOS-latest for now (flaky tests on CI)
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: Use stable rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust_version }}
        target: wasm32-unknown-unknown

    - name: Install linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get -y install libasound2-dev libxcb-shape0-dev libxcb-xfixes0-dev

    - name: Install wasm-bindgen
      run: cargo install wasm-bindgen-cli

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: binaryen

    - name: Install binaryen
      shell: bash -l {0}
      run: conda install -c conda-forge binaryen

    - name: Build web
      working-directory: web
      shell: bash -l {0}
      run: |
        npm run bootstrap
        npm run format:check
        npm run build
        npm run test
